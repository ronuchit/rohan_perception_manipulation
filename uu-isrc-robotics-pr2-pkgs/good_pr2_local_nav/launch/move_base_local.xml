<launch>
  <include file="$(find pr2_machine)/$(env ROBOT).machine" />

  <!-- Bring up the tilt_laser aware version of move_base -->
  <node pkg="pr2_move_base" name="pr2_move_base_node" type="pr2_move_base.py" machine="c2" output="screen">
    <!-- Change the name of the action that we're using -->
    <remap from="move_base/goal" to="move_base_local/goal" />
    <remap from="move_base/result" to="move_base_local/result" />
    <remap from="move_base/feedback" to="move_base_local/feedback" />
    <remap from="move_base/status" to="move_base_local/status" />
    <remap from="move_base/cancel" to="move_base_local/cancel" />

    <!-- Change our action name -->
    <remap from="pr2_move_base/goal" to="pr2_move_base_local/goal" />
    <remap from="pr2_move_base/result" to="pr2_move_base_local/result" />
    <remap from="pr2_move_base/feedback" to="pr2_move_base_local/feedback" />
    <remap from="pr2_move_base/status" to="pr2_move_base_local/status" />
    <remap from="pr2_move_base/cancel" to="pr2_move_base_local/cancel" />
  </node>

  <!-- Trajectory generator -->
  <node pkg="joint_trajectory_generator" type="joint_trajectory_generator" output="screen"
        name="joint_trajectory_generator" ns="r_arm_controller" >
    <param name="max_acc" value="2.0" />
    <param name="max_vel" value="2.5" />
  </node>
  <node pkg="joint_trajectory_generator" type="joint_trajectory_generator" output="screen"
        name="joint_trajectory_generator" ns="l_arm_controller" >
    <param name="max_acc" value="2.0" />
    <param name="max_vel" value="2.5" />
  </node>

  <!-- tuckarm action -->
  <node pkg="pr2_tuck_arms_action" type="tuck_arms.py" name="tuck_arms_action" output="screen">
    <param name="r_joint_trajectory_action" value="r_arm_controller/joint_trajectory_generator" />
    <param name="l_joint_trajectory_action" value="l_arm_controller/joint_trajectory_generator" />
    <param name="move_duration" value="0.0" />
  </node>

  <!-- Throttle the voxel grid that is being published for rviz -->
  <node ns="move_base_local_node/local_costmap" pkg="topic_tools" type="throttle" name="voxel_grid_throttle" machine="c2" args="messages voxel_grid 3.0 voxel_grid_throttled" />

  <node pkg="move_base" type="move_base" respawn="false" name="move_base_local_node" machine="c2">
    <remap from="odom" to="base_odometry/odom" />
    <remap from="cmd_vel" to="navigation/cmd_vel" />

    <!-- Change the name of the action that we're using -->
    <remap from="move_base" to="move_base_local" />
    <remap from="move_base_simple" to="move_base_local_simple" />

    <!-- Use the dwa local planner for the PR2 -->
<!--     <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" /> -->
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" />

    <!-- Load common configuration files -->
    <rosparam file="$(find pr2_navigation_config)/move_base/move_base_params.yaml" command="load" />

    <!-- Load local navigation specific parameters -->
    <rosparam file="$(find pr2_navigation_local)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find pr2_navigation_local)/config/global_costmap_params.yaml" command="load" />

    <!--Changes -->
    <rosparam file="$(find good_pr2_local_nav)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find good_pr2_local_nav)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find good_pr2_local_nav)/params/local_costmap_params_close.yaml" command="load" />
    <!--<rosparam file="$(find good_pr2_local_nav)/params/global_costmap_params.yaml" command="load" />-->

<!--     <rosparam file="$(find good_pr2_local_nav)/params/dwa_local_planner.yaml" command="load" ns="DWAPlannerROS" /> -->
    <rosparam file="$(find good_pr2_local_nav)/params/base_local_planner.yaml" command="load" ns="TrajectoryPlannerROS" />

    <rosparam file="$(find good_pr2_local_nav)/params/recovery_behaviors.yaml" command="load" />
    <rosparam file="$(find good_pr2_local_nav)/params/move_base_params.yaml" command="load" />


  </node>
</launch>
